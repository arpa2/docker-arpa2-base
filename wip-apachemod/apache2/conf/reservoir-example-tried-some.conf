<VirtualHost 127.0.0.1:8000>

  #TODO# This pattern cannot be set and used further down?
  #TODO# So we end up quoting it everywhere...
  #TODO# For testing purposes, we'll use [A-Z]{4} instead.
  # SetEnv UUIDPATN="[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
  SetEnv UUIDPATN="[A-Z]{4}"

  #TODO# Fixate the realm for the first demo versions
  SetEnv ARPA2REALM=arpa2.org
  ServerName reservoir.demo.arpa2.org

  RewriteEngine on
  RewriteMap symlink2colluid prg:/usr/share/arpa2reservoir/contrib/apache/symlink2colluuid
  #LDAP# RewriteMap index2colluuid prg:/usr/share/arpa2reservoir/contrib/apache/index2colluuid

  ServerAdmin dev+rick@arpa2.org
  #PREFER#%{ARPA2REALM}#NOT#%0# VirtualDocumentRoot "/var/arpa2/reservoir/%0"
  DocumentRoot /var/arpa2/reservoir

  # Conceal certain documents
  Alias /README.MD  /404.cgi/
  Alias /collect.py /404.cgi/
  Alias /bin/       /404.cgi/
  Alias /lib/       /404.cgi/

  # Provide error reporting scrips (they trigger the error code too)
  Alias /401.cgi    /var/www/html/401.cgi
  Alias /403.cgi    /var/www/html/403.cgi
  Alias /404.cgi    /var/www/html/404.cgi

  # Script to generate directory indexes
  #TODO# The script now gets delivered literally :-)
  #TODO# Let it run through a handler... file name extension?
  AddHandler cgi-script .cgi
  ScriptAlias /index2html.cgi /usr/share/arpa2reservoir/contrib/apache/index2html.cgi

  LogLevel debug

    <Location />

    AuthName "Reservoir for %{ARPA2REALM}"
    # AuthType SASL
    # Require valid_user

    # Deny by default; allow explicitly in matching locations

    </Location>


    # Locations that ARE NOT: /COLLUUID/RESUUID or /COLLUUID
    #
    # These must be /COLLUUID/index/path or /COLLUUID/index/path/RESUUID
    # and so they must be resolved by removing /index/path elements.
    # This means iterative lookup of /index/path elements under COLLUUID.
    #
    # <LocationMatch "!^/(%{env:UUIDPATN})(/%{env:UUIDPATN})?$">
    <LocationMatch "!^/[A-Z]{4}(/[A-Z]{4})?$">

    Require all granted

    # Rewrite the URI by traversing the index path
    # RewriteRule "^/(?<colluuid>%{UUIDPATN})/(?<indexstep>[^/.][^/]*)(/|$)" https://%{HTTP_HOST}/"${symlink2colluuid:/var/arpa2/reservoir/${ARPA2REALM}/${env:MATCH_COLLUUID}/${env:MATCH_INDEXSTEP}}/:404.cgi/}"
    RewriteRule "^/(?<colluuid>UUID)/(?<indexstep>[^/.][^/]*)(/|$)" https://%{HTTP_HOST}/"${symlink2colluuid:/var/arpa2/reservoir/${ARPA2REALM}/${env:MATCH_COLLUUID}/${env:MATCH_INDEXSTEP}}/:404.cgi/}"
    #LDAP# RewriteRule "^/(?<colluuid>%{UUIDPATN})/(?<indexstep>[^/]+)(/|$)" https://${HTTP_HOST}/"${index2colluuid:${env:MATCH_INDEXSTEP},resins=${env:MATCH_COLLUUID},associatedDomain=%{ARPA2REALM},ou=Reservoir,o=arpa2.net,ou=InternetWide}/:404.cgi/}"

    </LocationMatch>


    # We may be looking at an index of a collection, /COLLUUID
    #
    # <LocationMatch "^/(?<colluuid>%{UUIDPATN})/?$">
    <LocationMatch "^/(?<colluuid>[A-Z]{4})/?$">

    Require all granted

    # DocumentRoot / /var/arpa2/reservoir/%{ARPA2REALM}
    #TODO# Should reference a global handler, following tries to lookup locally
    # SetEnv PATH_INFO="/%{ARPA2REALM}/%{env:MATCH_COLLUUID}"
    #TODO# Should form /index2html.cgi/.../%{ARPA2REALM}/%{env:MATCH_COLLUUID}
    #Error400# DirectoryIndex "/index2html.cgi/var/arpa2/reservoir/arpa2.org/%{env:MATCH_COLLUUID}"
    #Error400# DirectoryIndex "/index2html.cgi/var/arpa2/reservoir/%{env:ARPA2REALM}/UUID"
    #Error400# DirectoryIndex "/index2html.cgi/var/arpa2/reservoir/%{ARPA2REALM}/UUID"
    DirectoryIndex "/index2html.cgi/var/arpa2/reservoir/arpa2.org/UUID" /404.cgi

    </LocationMatch>


    # We should now be able to serve a resource, /COLLUUID/RESUUID
    #
    # <LocationMatch "^/(?<colluuid>%{UUIDPATN})/(?<resuuid>%{UUIDPATN})$">
    <LocationMatch "^/(?<colluuid>[A-Z]{4})/(?<resuuid>[A-Z]{4})$">

    Require all granted

    # DocumentRoot /var/arpa2/reservoir/%{ARPA2REALM}

    </LocationMatch>


</VirtualHost>
