#
# There are two ways of reaching OpenLDAP; one is the ldapi:///
# reference through a UNIX domain socket.  The advantage of this
# one is that it can recognise user accounts.  The ldap:// URI
# is the formally standardised protocol over TCP, in this case
# through port 1389.  The container exports this port.
#
URI  ldapi://%2ftmp%2fldap-socket ldap://reservoir.arpa2:1389/

#
# The BASE distinguishedName is the root of the IdentityHub,
# regardless of where it is running.  Other services may use
# other BASE nodes, and they may even be made to mutually
# reference, if we want.  There is no reason why a server
# should be limited to one BASE though, but at least the
# possibility of splitting exists, and for clients it is
# conceptually simpler to split views as they tend to be
# more distributed and single-minded than a server.
#
BASE ou=Reservoir,o=internetwide.org,OU=ARPA2

#
# There are two BINDDN setup below:
#
#  - the one under the BASE is based on rootdn/rootpw
#    as setup in OpenLDAP configuration file slapd.conf
#    based on SIMPLE authentication; you will end up
#    typing the password (which, incidentally, is
#    "sekreet") over and over again;
#
#  - the one under cn=gssapi,cn=auth uses Kerberos5
#    over SASL/GSSAPI authentication, and assumes you
#    ran `kinit (uid)@(REALM)` --for instance, using
#    `kinit demo@ARPA2.NET`-- and these identities
#    will be mapped onto elements in the LDAP tree
#    under uid=,associatedDomain=,BASE; this is
#    single sign-on, including facilities to forward
#    credentials over OpenSSH connections and so on.
#
# Note that the most silly BINDDN is the default.  You
# need to `kinit demo` or `kinit demo1` or so before you 
# can continue after selecting the second BINDDN.
#

BINDDN uid=admin,ou=IdentityHub,o=arpa2.net,ou=InternetWide
# BINDDN uid=demo,cn=arpa2.net,cn=gssapi,cn=auth
