#
# The OID module 1.3.6.1.4.1.44469.666.389.3 is reserved for
# EXPERIMENTAL DEFINITIONS FOR
# life cycle descriptions.  At the basis, there is the
# lifecycleState and lifecycleObject, but additional data may
# be needed to store various kinds of life cycle state.
#
# All these intermediate attributes and their classes will
# be named lcXxxxZzzz and/or lcXxxxObject, with a good hint
# at the life cycle name that is usually attached to it.
# Though LDAP makes no assumptions that these names match up,
# there are bound to be other static components, such as the
# a2lc_xxxx processes implementing the steps, that are also
# more statically defined.
#


#
# The lifecycleState attribute allows LDAP subscribers to follow state
# changes, and trigger events in processing software.  Causes for
# triggering are expiration of a timer, or the occurrence of an event
# in another lifecycleState attribute in the same object.
#
# Past and future are separated by a dot.  As a result, a lifecycleState
# that ends in a dot is finished, and needs no further attention.
#
# It is possible for future values to be partial; for instance, a
# variable assignment without a value yet, or a timer that has not
# been set.  This is not possible for the next one up, though.
#
# This syntax is not enforced by LDAP, but may well be by applications
# that have to process events when they occur.
#
# 
# lifecycleState ::= lifecycle 0*( SP done ) SP "." SP next 0*( SP todo )
# lifecycleState  /= lifecycle 1*( SP done ) SP "."
# 
# next ::= event     "@" timestamp
# next  /= lifecycle "?" event
# 
# done ::= next
# done  /= var EQUALS value
# 
# todo ::= done
# todo  /= event    "@"
# todo  /= variable "="
# 
# lifecycle ::= identifier
# event     ::= identifier
# variable  ::= identifier
# 
# identifier ::= [a-zA-Z-_]+[0-9]*
# timestamp  ::= [0-9]+
# value      ::= [^ .]*
#
#
# lifecycles must be uniquely named within an object, and tend to refer
# to event handler software.  In the interest of LDAP filters (lcname*)
# every lifecycle SHALL NOT be the beginning of another life cycle, so
# "some" and "something" must not both be used, but "something" and
# "someone" can be used together.
#
# timestamps refer to a number of seconds since the Epoch, in decimal
# notation.  Note that no integer size limitation occurs in this format.
#
# events are uniquely named within a lifecycleState attribute.
#
# variables are uniquely named within a lifecycleState attribute.
# 
attributetype ( 1.3.6.1.4.1.44469.666.389.3.1
	NAME 'lifecycleState'
	DESC 'Incremental progress of a life cycle, triggering events from a process'
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 )

#
# The lifecycleObject class can be added onto any other class to allow
# it any number (including none) of lifecycleState attributes, which
# would each describe an independent (sequential) process.
#
objectclass ( 1.3.6.1.4.1.44469.666.389.3.2
	NAME 'lifecycleObject'
	DESC 'Objects managed with zero or more lifecycleState attributes'
	AUXILIARY
	MAY lifecycleState )


#OFZO# #
#OFZO# # X.509 Certificate Requests are stored by one life cycle and may be
#OFZO# # used in another.  Since there can be a variety of others, this
#OFZO# # intermediate store simplifies detached operations of life cycles.
#OFZO# # This is just a nice name for an OCTET STRING attribute.
#OFZO# #
#OFZO# attributetype ( 1.3.6.1.4.1.44469.666.389.3.50
#OFZO# 	NAME 'lcX509Request'
#OFZO# 	DESC 'An X.509 certificate request in DER notation'
#OFZO# 	SYNTAX 1.3.6.1.4.1.1466.115.121.1.40 )
#OFZO# 
#OFZO# #
#OFZO# # Public Credentials are cryptographic entities, not application
#OFZO# # blobs.  They hold the material that can be used in a variety of
#OFZO# # applications.
#OFZO# #
#OFZO# #TODO# Is it clear enough how to parse these?  Mixture of algs?
#OFZO# #
#OFZO# attributetype ( 1.3.6.1.4.1.44469.666.389.3.51
#OFZO# 	NAME 'lcPublicCredential'
#OFZO# 	DESC 'A public credential in its customary binary notation'
#OFZO# 	SYNTAX 1.3.6.1.4.1.1466.115.121.1.40 )

#
#
